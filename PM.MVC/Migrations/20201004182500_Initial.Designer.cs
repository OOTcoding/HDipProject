// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PM.MVC.Models.EF;

namespace PM.MVC.Migrations
{
    [DbContext(typeof(PMAppDbContext))]
    [Migration("20201004182500_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PM.MVC.Models.EF.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Space Project"
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.ProjectQualification", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("QualificationId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "QualificationId");

                    b.HasIndex("QualificationId");

                    b.ToTable("ProjectQualifications");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            QualificationId = 1
                        },
                        new
                        {
                            ProjectId = 1,
                            QualificationId = 7
                        },
                        new
                        {
                            ProjectId = 1,
                            QualificationId = 4
                        },
                        new
                        {
                            ProjectId = 1,
                            QualificationId = 6
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.ProjectResource", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ProjectResources");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ResourceId = 1
                        },
                        new
                        {
                            ProjectId = 1,
                            ResourceId = 4
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("Qualifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 0,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 2,
                            Level = 0,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 3,
                            Level = 0,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 4,
                            Level = 0,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 5,
                            Level = 1,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 6,
                            Level = 1,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 7,
                            Level = 1,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 8,
                            Level = 1,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 9,
                            Level = 2,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 10,
                            Level = 2,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 11,
                            Level = 2,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 12,
                            Level = 2,
                            SkillId = 4
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.QualificationResource", b =>
                {
                    b.Property<int>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("QualificationId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("QualificationResources");

                    b.HasData(
                        new
                        {
                            QualificationId = 1,
                            ResourceId = 1
                        },
                        new
                        {
                            QualificationId = 7,
                            ResourceId = 1
                        },
                        new
                        {
                            QualificationId = 7,
                            ResourceId = 4
                        },
                        new
                        {
                            QualificationId = 6,
                            ResourceId = 2
                        },
                        new
                        {
                            QualificationId = 4,
                            ResourceId = 3
                        },
                        new
                        {
                            QualificationId = 6,
                            ResourceId = 3
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steve"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Katrin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jhon"
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Excel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Driving licence"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Project management"
                        });
                });

            modelBuilder.Entity("PM.MVC.Models.EF.ProjectQualification", b =>
                {
                    b.HasOne("PM.MVC.Models.EF.Project", "Project")
                        .WithMany("ProjectQualifications")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM.MVC.Models.EF.Qualification", "Qualification")
                        .WithMany("ProjectQualification")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PM.MVC.Models.EF.ProjectResource", b =>
                {
                    b.HasOne("PM.MVC.Models.EF.Project", "Project")
                        .WithMany("ProjectResources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM.MVC.Models.EF.Resource", "Resource")
                        .WithMany("ProjectResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PM.MVC.Models.EF.Qualification", b =>
                {
                    b.HasOne("PM.MVC.Models.EF.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PM.MVC.Models.EF.QualificationResource", b =>
                {
                    b.HasOne("PM.MVC.Models.EF.Qualification", "Qualification")
                        .WithMany("QualificationResources")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM.MVC.Models.EF.Resource", "Resource")
                        .WithMany("QualificationResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
