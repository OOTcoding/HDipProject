@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityResource> SignInManager
@inject UserManager<IdentityResource> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <span class="badge badge-warning notification-count" data-placement="bottom"
                  data-popover-content="#list-popover"
                  data-trigger="focus"
                  id="notificationCount"
                  rel="popover"
                  tabindex="0"
                  title="Notifications">
            </span>
        </li>
        <li active-when="/Manage/Index" class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @UserManager.GetUserName(User)!</a>
        </li>
        <li active-when="/Account/Logout" class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li active-when="/Account/Register" class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li active-when="/Account/Login" class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<div class="d-none" id="list-popover"></div>
